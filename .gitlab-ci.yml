image: docker:24.0.2

services:
  - docker:dind

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_TLS_CERTDIR: ""
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  EC2_USER: ubuntu
  EC2_SSH_KEY: /tmp/deploy_key.pem

stages:
  - build
  - deploy
  - deploy-docs

before_script:
  - apk add --no-cache curl python3 py3-pip bash openssh-client
  - pip install awscli

build-dashlab-prod:
  stage: build
  only:
    - main
  script:
    # Configure AWS CLI
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set default.region $AWS_DEFAULT_REGION

    # Login to ECR
    - aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REGISTRY

    # Build Docker image
    - docker build --target runtime -f docker/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

    # Push to ECR
    - docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

deploy-to-ec2:
  stage: deploy
  only:
    - main
  script:
    - echo "$SSH_PRIVATE_KEY_B64" | base64 -d > $EC2_SSH_KEY
    - chmod 400 $EC2_SSH_KEY

    - |
      ssh -o StrictHostKeyChecking=no -i $EC2_SSH_KEY $EC2_USER@$EC2_HOST << EOF
        export IMAGE="$ECR_REGISTRY/$ECR_REPOSITORY:$CI_COMMIT_SHORT_SHA"
        export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION

        aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REGISTRY

        echo "Pulling image \$IMAGE"
        docker pull \$IMAGE

        echo "Updating IMAGE_TAG in .env..."
        sed -i 's/^IMAGE_TAG=.*/IMAGE_TAG=$CI_COMMIT_SHORT_SHA/' /home/ubuntu/.env

        cd /home/ubuntu

        echo "Restarting dashlab-prod container"
        docker compose -f "compose.prod.yml" up -d --no-deps dashlab-prod

        echo "Cleaning up unused Docker images and containers"
        docker system prune -af
      EOF

  dependencies:
    - build-dashlab-prod

pages:
  stage: deploy-docs
  image: python:3.11-slim
  script:
    - apt-get update && apt-get install -y git
    - python3 -m pip install --upgrade pip
    - python3 -m pip install sphinx git+https://github.com/bashtage/sphinx-material.git sphinx-tabs myst_parser
    - sphinx-build docs/src/ public/
  artifacts:
    paths:
      - public
  only:
    - main
